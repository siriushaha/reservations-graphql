# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

input CreateUserInput {
  firstName: String!
  lastName: String!
  username: String!
  password: String!
}

# The javascript `Date` as string. Type represents date and time as the ISO Date string.
scalar DateTime

type Hotel implements MetaData {
  createdAt: DateTime!
  updatedAt: DateTime!
  id: Float!
  name: String!
  address: String!
  phone: String!
  fax: String!
}

input HotelInput {
  name: String!
  address: String!
  phone: String!
  fax: String!
}

input LoginInput {
  username: String!
  password: String!
}

interface MetaData {
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Mutation {
  register(data: CreateUserInput!): User!
  login(data: LoginInput!): Token!
  createReservation(data: ReservationInput!): Reservation!
  updateReservation(data: ReservationInput!, id: Float!): Reservation!
  createHotel(data: HotelInput!): Hotel!
  updateHotel(data: HotelInput!, id: Float!): Hotel!
}

type Query {
  users: [User!]!
  reservations: [Reservation!]!
  reservationById(id: Float!): Reservation!
  hotels: [Hotel!]!
  hotelById(id: Float!): Hotel!
}

type Reservation implements MetaData {
  createdAt: DateTime!
  updatedAt: DateTime!
  id: Float!
  name: String!
  hotelName: String!
  arrivalDate: DateTime!
  departureDate: DateTime!
  user: User!
  hotel: Hotel!
}

input ReservationInput {
  name: String!
  hotelName: String!
  arrivalDate: DateTime!
  departureDate: DateTime!
  hotelId: Float!
}

type Token implements MetaData {
  createdAt: DateTime!
  updatedAt: DateTime!
  id: Float!
  firstName: String!
  lastName: String!
  username: String!
  reservations: [Reservation!]
  accessToken: String!
}

type User implements MetaData {
  createdAt: DateTime!
  updatedAt: DateTime!
  id: Float!
  firstName: String!
  lastName: String!
  username: String!
  reservations: [Reservation!]
}
